Bootstrap:
+ Fluent Api based on Create static class.
+ Bootstrapper has to own all disposalbe components
- Scheduler builder

Executions:
+ ITaskFactory for restoring persisted tasks.
+ IReleaser to release (container) or dispose (if disposable) executed tasks.
+ Do not use strong assembly qualified names for persisted tasks.
- Start method for executor

Scheduling:
- Persisted schedules/tasks.
- More sophisticated timer management.
- Start method for scheduler

Windsor
+ Registers Executor. 
+ Persist and restore intercepted tasks registered as class;
+ Persist and restore intercepted tasks registered as IPersistenClass;
+ Persist and restore non-registered tasks.
+ Disposes (release) tracked and non-tracked tasks
+ Register Scheduler.
- Support for xml-configuration
- Builder-like facility
- Task installer
- Tasks helper class for registration

Monitoring, statistics. 
- Total task executed. 
- Too long running tasks
- Thread.Sleep() Wait() detection? 
- Task queue Length
